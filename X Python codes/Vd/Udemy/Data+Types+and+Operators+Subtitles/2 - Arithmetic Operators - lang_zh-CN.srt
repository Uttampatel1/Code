1
00:00:01,940 --> 00:00:04,185
在上个视频中

2
00:00:04,184 --> 00:00:09,074
你看到了这行 Python 代码 它会求 3 和 5 的和

3
00:00:09,074 --> 00:00:13,274
这行代码中的加号是一个算术运算符

4
00:00:13,275 --> 00:00:16,265
Python 具有多个算术运算符

5
00:00:16,265 --> 00:00:19,560
大多数运算符都遵守数学规则

6
00:00:19,559 --> 00:00:22,259
我们来看看前四个运算符

7
00:00:22,260 --> 00:00:29,804
在 Python 中 我们使用普通的加号和减号进行加减运算

8
00:00:29,804 --> 00:00:32,887
乘法使用星号

9
00:00:32,887 --> 00:00:35,864
除法使用斜杠

10
00:00:35,865 --> 00:00:40,989
在此处 可以看出乘法发生在加法之前

11
00:00:40,988 --> 00:00:43,109
因为 Python 遵守数学运算顺序

12
00:00:43,109 --> 00:00:49,155
你可以参阅下方的注释 复习这方面的知识

13
00:00:49,155 --> 00:00:51,660
如果你希望先算加法

14
00:00:51,659 --> 00:00:54,329
可以将这部分放在括号里

15
00:00:54,329 --> 00:00:57,375
看完这四个运算符后

16
00:00:57,375 --> 00:01:00,450
再看看取幂运算符

17
00:01:00,450 --> 00:01:05,625
你可以使用两个星号计算一个数字和另一个数字的幂

18
00:01:05,625 --> 00:01:12,076
例如 这行会输出 3 的 2 次幂

19
00:01:12,076 --> 00:01:15,069
另一个运算符是插入符号

20
00:01:15,069 --> 00:01:18,909
有时候会被错误地当成取幂运算符

21
00:01:18,909 --> 00:01:23,649
它实际上会执行一种更复杂的运算 叫做按位 XOR

22
00:01:23,650 --> 00:01:30,010
这个算术运算符并不遵守一般的数学规则

23
00:01:30,010 --> 00:01:34,734
在这门课程中 你不需要了解按位运算符

24
00:01:34,734 --> 00:01:38,500
但是如果你感兴趣的话 可以在下面的注释中了解相关信息

25
00:01:38,500 --> 00:01:43,290
你只需记住 如果要取幂

26
00:01:43,290 --> 00:01:45,690
则使用两个星号 而不是插入符号

27
00:01:45,689 --> 00:01:50,219
否则会不小心生成很奇怪的结果

28
00:01:50,219 --> 00:01:56,265
另一个实用运算符是这个百分号 它会执行取模运算

29
00:01:56,265 --> 00:02:01,515
当你用第一个数字除以第二个数字后 它会返回余数

30
00:02:01,515 --> 00:02:07,890
在这个示例中 9 除以 2 的结果是 4 余数为 1

31
00:02:07,890 --> 00:02:12,090
因此这行代码会输出 1 因为取模运算返回的是余数

32
00:02:12,090 --> 00:02:18,254
你可能还会用到整数除法 用两个斜杠表示

33
00:02:18,254 --> 00:02:23,625
它将一个整数除以另一个整数 但是不会给出精确答案

34
00:02:23,625 --> 00:02:26,835
而是将结果向下取整数

35
00:02:26,835 --> 00:02:32,474
7 除以 2 是 3.5 向下取整为 3

36
00:02:32,474 --> 00:02:36,329
注意 即使答案是负数 也会向下取整

37
00:02:36,330 --> 00:02:41,700
在这种情况下 -3.5 向下取整为 -4

38
00:02:41,699 --> 00:02:44,909
我们很快会学习其他类别的运算符

39
00:02:44,909 --> 00:02:49,449
这些就是 Python 中的所有算术运算符

